package TST_CadastrarFormulario;


import java.util.concurrent.TimeUnit;

import org.junit.*;

import static org.junit.Assert.*;

import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;


import br.com.neoway.entidades.Formulario;;


public class TST_CadastrarFormulario {

	
	private WebDriver driver;
	private String baseUrl;	
	private StringBuffer verificationErrors = new StringBuffer();
	
	private Formulario formulario;
	
		
	
	@Before
	public void setUp() throws Exception {	
		
	
		
		//this.loggerDebug = new LogDebug(this.getClass());
		//this.loggerTestResult = new LogTestResult(this.getClass());
		this.formulario = new Formulario();
		
		
		this.driver = new FirefoxDriver();
		this.baseUrl = "http://demoqa.com/";
		this.driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		this.driver.get(baseUrl);
    
	}

	
	@Test
	public void cadastrarAvaliado() throws Exception {
		
		//driver = new FirefoxDriver();
		//baseUrl = "http://restchallenge-neoautomation.rhcloud.com";
		//driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		//driver.get(baseUrl);

		//loggerDebug.debug("Teste Iniciado");
		    
		try{
			
			
			
			//2 - Clicar no botão 'Registration'
			driver.findElement(By.id("menu-item-374")).click();	
			
	
									
			//Thread.sleep(2000);

			//Inserção do Nome
			driver.findElement(By.id("name_3_firstname")).sendKeys(formulario.getFirtName());
			driver.findElement(By.id("name_3_lastname")).sendKeys(formulario.getLastName());
			
			driver.findElement(By.name("checkbox_5[]")).click();
			
			driver.findElement(By.id("phone_9")).sendKeys(formulario.getPhoneNumber());
			
			driver.findElement(By.id("username")).sendKeys(formulario.getUserName());
			driver.findElement(By.id("email_1")).sendKeys(formulario.geteMail());
			driver.findElement(By.id("password_2")).sendKeys(formulario.getPassword());
			driver.findElement(By.id("confirm_password_password_2")).sendKeys(formulario.getConfirmPassword());
		
			//4 - Clicar no botão Submit
			driver.findElement(By.name("pie_submit")).click();
			
		
			//Capturando a mensagem de validação após o submit
			//String msgRetornadaInterface = driver.findElement(By.tagName("article")).getText();
			
			String msgRetornadaInterface = driver.findElement(By.tagName("strong")).getText();
			
			System.out.println(msgRetornadaInterface);
			
			///html/body/div/div/div[1]/main/article/div/p/strong
			
			Thread.sleep(20000);						
			
			
			String msgEsperada = "Error: Username already exists";
		
			try{
				
				//Validação da mensagem
				assertEquals(msgEsperada, msgRetornadaInterface);	    
				//loggerTestResult.testResult("Aprovado");
				
			}catch (AssertionError erroValidaMensagemCadastroDeAvaliado){
    		
				//loggerDebug.debug("Erro ao Executar o caso de Teste: " + erroValidaMensagemCadastroDeAvaliado);
    			//loggerTestResult.testResult("Reprovado");
    			
    			//Avisa a api junit sobre o erro no caso de teste
    			throw erroValidaMensagemCadastroDeAvaliado;
			
    		}finally{
    
    			//loggerDebug.debug("Teste Finalizado");
			
			}
			
		}catch(Exception erro){
			
			//loggerDebug.debug("Erro ao Executar o cado de Teste: " + erro);
			//loggerTestResult.testResult("Reprovado");
			//loggerDebug.debug("Teste Finalizado");
			
			//Avisa a api junit sobre o erro no caso de teste
			throw erro;
			
		}
	}
	

	@After
	public void tearDown() throws Exception {
		
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		
		if (!"".equals(verificationErrorString)) {
			
			fail(verificationErrorString);
		}
	}
	
}
